BOOTSEG = 0x07C0                                                                # Address of boot sector in memory (0x7C00 >> 4)                                                                         # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
.code16                                                                         # Generate code in 16 bits mode                                                                                          # Colorize: green
.section ".bootsector_code", "ax"                                               # bootsector_code section (a - allocatable, x - executable)                                                              # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
.globl  _start                                                                  # Make _start visible for linker                                                                                         # Colorize: green
_start:                                                                         # Global pointer to the entry point in order to make linker silent                                                       # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
# ----------------------------------------------------------------------------- # -----------------------------------------------------------------------------                                          # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
    .ascii  "MZ"                                                                # Start boot sector with MZ characters (MS-DOS Header) in order to let UEFI to skip 0x0200 bytes                         # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
    ljmp    $(BOOTSEG), $(start2)                                               # Normalize the start address                                                                                            # Colorize: green
start2:                                                                         # Label used for normalization                                                                                           # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
# ============================================================================= # =============================================================================                                          # Colorize: green
# There is no UEFI                                                              # We will print message and reboot PC                                                                                    # Colorize: green
# ============================================================================= # =============================================================================                                          # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
    movw    %cs, %ax                                                            # Indirectly assign (via AX)...                                                                                          # Colorize: green
    movw    %ax, %ds                                                            # CS to DS                                                                                                               # Colorize: green
    movw    %ax, %es                                                            # CS to ES                                                                                                               # Colorize: green
    movw    %ax, %ss                                                            # CS to SS                                                                                                               # Colorize: green
    xorw    %sp, %sp                                                            # Set SP to 0                                                                                                            # Colorize: green
    sti                                                                         # Set Interrupt Flag (When the IF flag is set, the processor begins responding to external, maskable interrupts after the next instruction is executed.) # Colorize: green
    cld                                                                         # Clear Direction Flag (When the DF flag is set to 0, string operations increment the index registers (ESI and/or EDI))  # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
# ----------------------------------------------------------------------------- # -----------------------------------------------------------------------------                                          # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
    movw   $(reboot_msg), %si                                                   # Store pointer of reboot message to SI                                                                                  # Colorize: green
                                                                                # TODO: Move 0x0E and 0x07 here                                                                                                                       # Colorize: green
msg_loop:                                                                       # Label for printing message                                                                                             # Colorize: green
    lodsb                                                                       # Load one byte from SI to AL                                                                                            # Colorize: green
    andb    %al, %al                                                            # IF AL == 0                                                                                                             # Colorize: green
    jz      bs_die                                                              #   THEN jump to bs_die                                                                                                  # Colorize: green
    movb    $0x0E, %ah                                                          #   ELSE set AH to 0x0E (Printing on the screen)                                                                         # Colorize: green
    movw    $0x07, %bx                                                          #        set BX to 0x07 (BH=0 - first page, BL=7 - Light Gray)                                                           # Colorize: green
    int     $0x10                                                               #        Call interrupt 0x10 for printing character from AL on the screen                                                # Colorize: green
    jmp     msg_loop                                                            #        Print next character                                                                                            # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
# ----------------------------------------------------------------------------- # -----------------------------------------------------------------------------                                          # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
bs_die:                                                                         # We will come to this label when reboot message printed                                                                 # Colorize: green
    xorw    %ax, %ax                                                            # Set AX to 0 in order to let interrupt 0x16 to read key press                                                           # Colorize: green
    int     $0x16                                                               # Wait until user press some keyboard button                                                                             # Colorize: green
    int     $0x19                                                               # Go to the bootstrap loader (It will try to reload from some bootable disk)                                             # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
    ljmp    $0xF000, $0xFFF0                                                    # Reboot your PC if something goes wrong                                                                                 # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
# ============================================================================= # =============================================================================                                          # Colorize: green
# We have UEFI                                                                  # https://en.wikibooks.org/wiki/X86_Disassembly/Windows_Executable_Files                                                 # Colorize: green
# ============================================================================= # =============================================================================                                          # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
    .org    0x3C                                                                # According to MS-DOS Header there is e_lfanew field at 0x3C.                                                            # Colorize: green
    .long   pe_header                                                           # We will put offset to the PE Header here.                                                                              # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
# ============================================================================= # =============================================================================                                          # Colorize: green
# There is no UEFI                                                              # This section has a reboot message only                                                                                 # Colorize: green
# ============================================================================= # =============================================================================                                          # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
.section ".bootsector_data", "a"                                                # bootsector_data section (a - allocatable)                                                                              # Colorize: green
reboot_msg:                                                                     # Reboot message                                                                                                         # Colorize: green
    .ascii  "Please use UEFI bootloader.\r\n"                                   # A lot of...                                                                                                            # Colorize: green
    .ascii  "\n"                                                                # bytes for...                                                                                                           # Colorize: green
    .ascii  "Remove disk and press any key to reboot...\r\n"                    # reboot message...                                                                                                      # Colorize: green
    .byte   0                                                                   # Ends with 0                                                                                                            # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
# ============================================================================= # =============================================================================                                          # Colorize: green
# We have UEFI                                                                  # https://en.wikibooks.org/wiki/X86_Disassembly/Windows_Executable_Files                                                 # Colorize: green
# ============================================================================= # =============================================================================                                          # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
pe_header:                                                                      # Label for locating PE Header                                                                                           # Colorize: green
    .ascii  "PE\0\0"                                                            # PE Header starts with PE\0\0                                                                                           # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
# ----------------------------------------------------------------------------- # -----------------------------------------------------------------------------                                          # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
coff_header:                                                                    # We will put COFF Header right after the PE Header                                                                      # Colorize: green
                                                                                # struct COFFHeader                                                                                                      # Colorize: green
                                                                                # {                                                                                                                      # Colorize: green
    .word   0x8664  # COFFHeaderMachine::X64                                    #     COFFHeaderMachine              machine;               # This field determines what machine the file was compiled for. # Colorize: green
    .word   0x03    # 3 sections                                                #     quint16                        numberOfSections;      # The number of sections that are described at the end of the PE headers. # Colorize: green
    .long   0       # No timestamp                                              #     quint32                        timeDateStamp;         # 32 bit time at which this header was generated.            # Colorize: green
    .long   0       # No symbols                                                #     quint32                        pointerToSymbolTable;  # Pointer to symbol table.                                   # Colorize: green
    .long   0       # No symbols                                                #     quint32                        numberOfSymbols;       # Number of symbols.                                         # Colorize: green
    .word   section_table - optional_header                                     #     quint16                        sizeOfOptionalHeader;  # This field shows how long the "PE Optional Header" is that follows the COFF header. # Colorize: green
    .word   0x0206  #   COFFHeaderCharacteristicsFlag::DEBUG_STRIPPED           #     COFFHeaderCharacteristicsFlags characteristics;       # This is a field of bit flags, that show some characteristics of the file. # Colorize: green
                    # | COFFHeaderCharacteristicsFlag::LINE_NUMS_STRIPPED       # };                                                                                                                     # Colorize: green
                    # | COFFHeaderCharacteristicsFlag::EXECUTABLE_IMAGE         #                                                                                                                        # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
# ----------------------------------------------------------------------------- # -----------------------------------------------------------------------------                                          # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
optional_header:                                                                # Label for PE Optional Header                                                                                           # Colorize: green
                                                                                # struct PeOptionalHeader                                                                                                # Colorize: green
                                                                                # {                                                                                                                      # Colorize: green
    .word   0x020B  # PE32+ format                                              #     quint16                                 magic;                                    # Magic number 0x020B for identifing PE format for 64 bit system # Colorize: green
    .byte   0x0E    # Some modern ...                                           #     quint8                                  majorLinkerVersion;                       # The major version number of the linker. # Colorize: green
    .byte   0x0A    # ... linker version                                        #     quint8                                  minorLinkerVersion;                       # The minor version number of the linker. # Colorize: green
    .long   0       # Ignored                                                   #     quint32                                 sizeOfCode;                               # The size of the code section, in bytes, or the sum of all such sections if there are multiple code sections. # Colorize: green
    .long   0       # Ignored                                                   #     quint32                                 sizeOfInitializedData;                    # The size of the initialized data section, in bytes, or the sum of all such sections if there are multiple initialized data sections. # Colorize: green
    .long   0       # Ignored                                                   #     quint32                                 sizeOfUninitializedData;                  # The size of the uninitialized data section, in bytes, or the sum of all such sections if there are multiple uninitialized data sections. # Colorize: green
    .long   0       # To be filled by image_builder                             #     quint32                                 addressOfEntryPoint;                      # A pointer to the entry point function, relative to the image base address. For executable files, this is the starting address. For device drivers, this is the address of the initialization function. The entry point function is optional for DLLs. When no entry point is present, this member is zero. # Colorize: green
    .long   0       # Ignored                                                   #     quint32                                 baseOfCode;                               # A pointer to the beginning of the code section, relative to the image base. # Colorize: green
    .quad   0       # Ignored                                                   #     quint64                                 imageBase;                                # The preferred address of the first byte of the image when it is loaded in memory. This value is a multiple of 64K bytes. The default value for DLLs is 0x10000000. The default value for applications is 0x00400000, except on Windows CE where it is 0x00010000. # Colorize: green
    .long   0x40    # 64 bytes                                                  #     quint32                                 sectionAlignment;                         # The alignment of sections loaded in memory, in bytes. This value must be greater than or equal to the fileAlignment member. The default value is the page size for the system. # Colorize: green
    .long   0x40    # 64 bytes                                                  #     quint32                                 fileAlignment;                            # The alignment of the raw data of sections in the image file, in bytes. The value should be a power of 2 between 512 and 64K (inclusive). The default is 512. If the sectionAlignment member is less than the system page size, this member must be the same as sectionAlignment. # Colorize: green
    .word   0       # Ignored                                                   #     quint16                                 majorOperatingSystemVersion;              # The major version number of the required operating system. # Colorize: green
    .word   0       # Ignored                                                   #     quint16                                 minorOperatingSystemVersion;              # The minor version number of the required operating system. # Colorize: green
    .word   0       # Ignored                                                   #     quint16                                 majorImageVersion;                        # The major version number of the image. # Colorize: green
    .word   0       # Ignored                                                   #     quint16                                 minorImageVersion;                        # The minor version number of the image. # Colorize: green
    .word   0       # Ignored                                                   #     quint16                                 majorSubsystemVersion;                    # The major version number of the subsystem. # Colorize: green
    .word   0       # Ignored                                                   #     quint16                                 minorSubsystemVersion;                    # The minor version number of the subsystem. # Colorize: green
    .long   0       # Reserved                                                  #     quint32                                 win32VersionValue;                        # This member is reserved and must be 0. # Colorize: green
    .long   0       # To be filled by image_builder                             #     quint32                                 sizeOfImage;                              # The size of the image, in bytes, including all headers. Must be a multiple of sectionAlignment. # Colorize: green
    .long   0x0200  # Say UEFI to skip 0x0200 bytes                             #     quint32                                 sizeOfHeaders;                            # Total size of all headers.     # Colorize: green
    .long   0       # Ignored                                                   #     quint32                                 checkSum;                                 # The image file checksum.       # Colorize: green
    .word   0x0A    # PeOptionalHeaderSubsystem::UEFI_APPLICATION               #     PeOptionalHeaderSubsystem               subsystem;                                # The subsystem that will be invoked to run the executable # Colorize: green
    .word   0       # PeOptionalHeaderDllCharacteristicsFlag::NONE              #     PeOptionalHeaderDllCharacteristicsFlags dllCharacteristics;                       # The DLL characteristics of the image. # Colorize: green
    .quad   0       # Ignored                                                   #     quint64                                 sizeOfStackReserve;                       # The number of bytes to reserve for the stack. Only the memory specified by the sizeOfStackCommit member is committed at load time; the rest is made available one page at a time until this reserve size is reached. # Colorize: green
    .quad   0       # Ignored                                                   #     quint64                                 sizeOfStackCommit;                        # The number of bytes to commit for the stack. # Colorize: green
    .quad   0       # Ignored                                                   #     quint64                                 sizeOfHeapReserve;                        # The number of bytes to reserve for the local heap. Only the memory specified by the sizeOfHeapCommit member is committed at load time; the rest is made available one page at a time until this reserve size is reached. # Colorize: green
    .quad   0       # Ignored                                                   #     quint64                                 sizeOfHeapCommit;                         # The number of bytes to commit for the local heap. # Colorize: green
    .long   0       # Ignored                                                   #     quint32                                 loaderFlags;                              # This member is obsolete.       # Colorize: green
    .long   0x06    # 6 data directories                                        #     quint32                                 numberOfRvaAndSizes;                      # The number of directory entries in the remainder of the optional header. Each entry describes a location and size. # Colorize: green
                                                                                #     DataDirectory                           dataDirectories[numberOfRvaAndSizes];     # Provides RVAs and sizes which locate various data structures, which are used for setting up the execution environment of a module. # Colorize: green
                                                                                # };                                                                                                                     # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
                                                                                # struct DataDirectory                                                                                                   # Colorize: green
                                                                                # {                                                                                                                      # Colorize: green
                                                                                #     quint32 virtualAddress;   # Address of DataDirectory                                                               # Colorize: green
                                                                                #     quint32 size;             # Size of DataDirectory                                                                  # Colorize: green
                                                                                # };                                                                                                                     # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
    .long   0       # Ignored                                                   # ExportTable virtualAddress                                                                                             # Colorize: green
    .long   0       # Ignored                                                   # ExportTable size                                                                                                       # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
    .long   0       # Ignored                                                   # ImportTable virtualAddress                                                                                             # Colorize: green
    .long   0       # Ignored                                                   # ImportTable size                                                                                                       # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
    .long   0       # Ignored                                                   # ResourceTable virtualAddress                                                                                           # Colorize: green
    .long   0       # Ignored                                                   # ResourceTable size                                                                                                     # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
    .long   0       # Ignored                                                   # ExceptionTable virtualAddress                                                                                          # Colorize: green
    .long   0       # Ignored                                                   # ExceptionTable size                                                                                                    # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
    .long   0       # Ignored                                                   # CertificationTable virtualAddress                                                                                      # Colorize: green
    .long   0       # Ignored                                                   # CertificationTable size                                                                                                # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
    .long   0       # Ignored                                                   # BaseRelocationTable virtualAddress                                                                                     # Colorize: green
    .long   0       # Ignored                                                   # BaseRelocationTable size                                                                                               # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
# ----------------------------------------------------------------------------- # -----------------------------------------------------------------------------                                          # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
section_table:                                                                  # Label for section table                                                                                                # Colorize: green
                                                                                # struct SectionHeader                                                                                                   # Colorize: green
                                                                                # {                                                                                                                      # Colorize: green
    .ascii  ".reloc\0\0"    # UEFI application must be relocatable              #     char                              name[8];                # 8-byte null-padded UTF-8 string(the string may not be null terminated if all 8 characters are used). # Colorize: green
    .long   0               # To be filled by image_builder                     #     quint32                           virtualSize;            # The total size of the section when loaded into memory, in bytes. If this value is greater than the SizeOfRawData member, the section is filled with zeroes. This field is valid only for executable images and should be set to 0 for object files. # Colorize: green
    .long   0               # To be filled by image_builder                     #     quint32                           virtualAddress;         # The address of the first byte of the section when loaded into memory, relative to the image base. For object files, this is the address of the first byte before relocation is applied. # Colorize: green
    .long   0               # To be filled by image_builder                     #     quint32                           sizeOfRawData;          # The size of the initialized data on disk, in bytes. This value must be a multiple of the FileAlignment member of the PE Optional Header structure. If this value is less than the VirtualSize member, the remainder of the section is filled with zeroes. If the section contains only uninitialized data, the value is 0. # Colorize: green
    .long   0               # To be filled by image_builder                     #     quint32                           pointerToRawData;       # A file pointer relative to the beginning of the file to the first page within the COFF file. This value must be a multiple of the FileAlignment member of the PE Optional Header structure. If a section contains only uninitialized data this value should be 0. # Colorize: green
    .long   0               # Ignored                                           #     quint32                           pointerToRelocations;   # A file pointer to the beginning of the relocation entries for the section. If there are no relocations, this value is 0. # Colorize: green
    .long   0               # Ignored                                           #     quint32                           pointerToLinenumbers;   # A file pointer to the beginning of the line-number entries for the section. If there are no COFF line numbers, this value is 0. # Colorize: green
    .word   0               # Ignored                                           #     quint16                           numberOfRelocations;    # The number of relocation entries for the section. This value is 0 for executable images. # Colorize: green
    .word   0               # Ignored                                           #     quint16                           numberOfLineNumbers;    # The number of line-number entries for the section.     # Colorize: green
    .long   0x42100040      # Details below                                     #     SectionHeaderCharacteristicsFlags characteristics;        # The characteristics of the image.                      # Colorize: green
#             SectionHeaderCharacteristicsFlag::MEM_READ                        # };                                                                                                                     # Colorize: green
#           | SectionHeaderCharacteristicsFlag::MEM_DISCARDABLE                 #                                                                                                                        # Colorize: green
#           | SectionHeaderCharacteristicsFlag::ALIGN_1BYTES                    #                                                                                                                        # Colorize: green
#           | SectionHeaderCharacteristicsFlag::CNT_INITIALIZED_DATA            #                                                                                                                        # Colorize: green
                                                                                # struct SectionHeader                                                                                                   # Colorize: green
                                                                                # {                                                                                                                      # Colorize: green
    .ascii  ".config\0"                                                         #     char                              name[8];                # 8-byte null-padded UTF-8 string(the string may not be null terminated if all 8 characters are used). # Colorize: green
    .long   0               # To be filled by image_builder                     #     quint32                           virtualSize;            # The total size of the section when loaded into memory, in bytes. If this value is greater than the SizeOfRawData member, the section is filled with zeroes. This field is valid only for executable images and should be set to 0 for object files. # Colorize: green
    .long   0               # To be filled by image_builder                     #     quint32                           virtualAddress;         # The address of the first byte of the section when loaded into memory, relative to the image base. For object files, this is the address of the first byte before relocation is applied. # Colorize: green
    .long   0               # To be filled by image_builder                     #     quint32                           sizeOfRawData;          # The size of the initialized data on disk, in bytes. This value must be a multiple of the FileAlignment member of the PE Optional Header structure. If this value is less than the VirtualSize member, the remainder of the section is filled with zeroes. If the section contains only uninitialized data, the value is 0. # Colorize: green
    .long   0               # To be filled by image_builder                     #     quint32                           pointerToRawData;       # A file pointer relative to the beginning of the file to the first page within the COFF file. This value must be a multiple of the FileAlignment member of the PE Optional Header structure. If a section contains only uninitialized data this value should be 0. # Colorize: green
    .long   0               # Ignored                                           #     quint32                           pointerToRelocations;   # A file pointer to the beginning of the relocation entries for the section. If there are no relocations, this value is 0. # Colorize: green
    .long   0               # Ignored                                           #     quint32                           pointerToLinenumbers;   # A file pointer to the beginning of the line-number entries for the section. If there are no COFF line numbers, this value is 0. # Colorize: green
    .word   0               # Ignored                                           #     quint16                           numberOfRelocations;    # The number of relocation entries for the section. This value is 0 for executable images. # Colorize: green
    .word   0               # Ignored                                           #     quint16                           numberOfLineNumbers;    # The number of line-number entries for the section.     # Colorize: green
    .long   0x60500020      # Details below                                     #     SectionHeaderCharacteristicsFlags characteristics;        # The characteristics of the image.                      # Colorize: green
#             SectionHeaderCharacteristicsFlag::MEM_READ                        # };                                                                                                                     # Colorize: green
#           | SectionHeaderCharacteristicsFlag::MEM_EXECUTE                     #                                                                                                                        # Colorize: green
#           | SectionHeaderCharacteristicsFlag::ALIGN_16BYTES                   #                                                                                                                        # Colorize: green
#           | SectionHeaderCharacteristicsFlag::CNT_CODE                        #                                                                                                                        # Colorize: green
                                                                                # struct SectionHeader                                                                                                   # Colorize: green
                                                                                # {                                                                                                                      # Colorize: green
    .ascii  ".kernel\0"                                                         #     char                              name[8];                # 8-byte null-padded UTF-8 string(the string may not be null terminated if all 8 characters are used). # Colorize: green
    .long   0               # To be filled by image_builder                     #     quint32                           virtualSize;            # The total size of the section when loaded into memory, in bytes. If this value is greater than the SizeOfRawData member, the section is filled with zeroes. This field is valid only for executable images and should be set to 0 for object files. # Colorize: green
    .long   0               # To be filled by image_builder                     #     quint32                           virtualAddress;         # The address of the first byte of the section when loaded into memory, relative to the image base. For object files, this is the address of the first byte before relocation is applied. # Colorize: green
    .long   0               # To be filled by image_builder                     #     quint32                           sizeOfRawData;          # The size of the initialized data on disk, in bytes. This value must be a multiple of the FileAlignment member of the PE Optional Header structure. If this value is less than the VirtualSize member, the remainder of the section is filled with zeroes. If the section contains only uninitialized data, the value is 0. # Colorize: green
    .long   0               # To be filled by image_builder                     #     quint32                           pointerToRawData;       # A file pointer relative to the beginning of the file to the first page within the COFF file. This value must be a multiple of the FileAlignment member of the PE Optional Header structure. If a section contains only uninitialized data this value should be 0. # Colorize: green
    .long   0               # Ignored                                           #     quint32                           pointerToRelocations;   # A file pointer to the beginning of the relocation entries for the section. If there are no relocations, this value is 0. # Colorize: green
    .long   0               # Ignored                                           #     quint32                           pointerToLinenumbers;   # A file pointer to the beginning of the line-number entries for the section. If there are no COFF line numbers, this value is 0. # Colorize: green
    .word   0               # Ignored                                           #     quint16                           numberOfRelocations;    # The number of relocation entries for the section. This value is 0 for executable images. # Colorize: green
    .word   0               # Ignored                                           #     quint16                           numberOfLineNumbers;    # The number of line-number entries for the section.     # Colorize: green
    .long   0x60100020      # Details below                                     #     SectionHeaderCharacteristicsFlags characteristics;        # The characteristics of the image.                      # Colorize: green
#             SectionHeaderCharacteristicsFlag::MEM_READ                        # };                                                                                                                     # Colorize: green
#           | SectionHeaderCharacteristicsFlag::MEM_EXECUTE                     #                                                                                                                        # Colorize: green
#           | SectionHeaderCharacteristicsFlag::ALIGN_1BYTES                    #                                                                                                                        # Colorize: green
#           | SectionHeaderCharacteristicsFlag::CNT_CODE                        #                                                                                                                        # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
# ============================================================================= # =============================================================================                                          # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
.section ".boot_marker", "a"                                                    # boot_marker section (a - allocatable)                                                                                  # Colorize: green
                                                                                #                                                                                                                        # Colorize: green
.globl  _boot_magic_number                                                      # Make _boot_magic_number visible for linker                                                                             # Colorize: green
_boot_magic_number:                                                             # Label for magic number                                                                                                 # Colorize: green
    .word   0xAA55                                                              # Insert magic number 0xAA55 at the end of 0x0200 byte sector to make it bootable                                        # Colorize: green
