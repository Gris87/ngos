// This file generated with the code_generator                                                                                                                                                           // Colorize: green
// Please do not modify it manually                                                                                                                                                                      // Colorize: green
#ifndef COM_NGOS_SHARED_COMMON_CPU_LIB_GENERATED_X86CR4_H                                                                                                                                                // Colorize: green
#define COM_NGOS_SHARED_COMMON_CPU_LIB_GENERATED_X86CR4_H                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
#define X86_CR4_VIRTUAL_8086_MODE_EXTENSIONS                     (1ULL << 0)  // Enables interrupt- and exception-handling extensions in virtual-8086 mode when set; disables the extensions when clear  // Colorize: green
#define X86_CR4_PROTECTED_MODE_VIRTUAL_INTERRUPTS                (1ULL << 1)  // Enables hardware support for a virtual interrupt flag (VIF) in protected mode when set; disables the VIF flag in protected mode when clear // Colorize: green
#define X86_CR4_TIME_STAMP_DISABLE                               (1ULL << 2)  // Restricts the execution of the RDTSC instruction to procedures running at privilege level 0 when set; allows RDTSC instruction to be executed at any privilege level when clear // Colorize: green
#define X86_CR4_DEBUGGING_EXTENSIONS                             (1ULL << 3)  // References to debug registers DR4 and DR5 cause an undefined opcode (#UD) exception to be generated when set; when clear, processor aliases references to registers DR4 and DR5 for compatibility with software written to run on earlier IA-32 processors // Colorize: green
#define X86_CR4_PAGE_SIZE_EXTENSIONS                             (1ULL << 4)  // Enables 4-MByte pages with 32-bit paging when set; restricts 32-bit paging to pages of 4 KBytes when clear              // Colorize: green
#define X86_CR4_PHYSICAL_ADDRESS_EXTENSION                       (1ULL << 5)  // When set, enables paging to produce physical addresses with more than 32 bits                                           // Colorize: green
#define X86_CR4_MACHINE_CHECK_ENABLE                             (1ULL << 6)  // Enables the machine-check exception when set; disables the machine-check exception when clear                           // Colorize: green
#define X86_CR4_PAGE_GLOBAL_ENABLE                               (1ULL << 7)  // (Introduced in the P6 family processors                                                                                 // Colorize: green
#define X86_CR4_PERFORMANCE_MONITORING_COUNTER_ENABLE            (1ULL << 8)  // Enables execution of the RDPMC instruction for programs or procedures running at any protection level when set; RDPMC instruction can be executed only at protection level 0 when clear // Colorize: green
#define X86_CR4_SUPPORT_FXSAVE                                   (1ULL << 9)  // When set, this flag: (1) indicates to software that the operating system supports the use of the FXSAVE and FXRSTOR instructions, (2) enables the FXSAVE and FXRSTOR instructions to save and restore the contents of the XMM and MXCSR registers along with the contents of the x87 FPU and MMX registers, and (3) enables the processor to execute SSE/SSE2/SSE3/SSSE3/SSE4 instructions, with the exception of the PAUSE, PREFETCHh, SFENCE, LFENCE, MFENCE, MOVNTI, CLFLUSH, CRC32, and POPCNT // Colorize: green
#define X86_CR4_SUPPORT_UNMASKED_SSE_EXCEPTIONS                  (1ULL << 10) // When set, indicates that the operating system supports the handling of unmasked SIMD floating-point exceptions through an exception handler that is invoked when a SIMD floating-point exception (#XM) is generated // Colorize: green
#define X86_CR4_USER_MODE_INSTRUCTION_PREVENTION                 (1ULL << 11) // When set, the following instructions cannot be executed if CPL > 0: SGDT, SIDT, SLDT, SMSW, and STR                     // Colorize: green
#define X86_CR4_57_BIT_LINEAR_ADDRESSES                          (1ULL << 12) // When set in IA-32e mode, the processor uses 5-level paging to translate 57-bit linear addresses                         // Colorize: green
#define X86_CR4_VIRTUAL_MACHINE_EXTENSIONS_ENABLE                (1ULL << 13) // Enables VMX operation when set                                                                                          // Colorize: green
#define X86_CR4_SAFER_MODE_EXTENSIONS_ENABLE                     (1ULL << 14) // Enables SMX operation when set                                                                                          // Colorize: green
#define X86_CR4_FSGSBASE                                         (1ULL << 16) // Enables the instructions RDFSBASE, RDGSBASE, WRFSBASE, and WRGSBASE                                                     // Colorize: green
#define X86_CR4_PROCESS_CONTEXT_ID_ENABLE                        (1ULL << 17) // Enables process-context identifiers (PCIDs) when set                                                                    // Colorize: green
#define X86_CR4_SUPPORT_XSAVE                                    (1ULL << 18) // When set, this flag: (1) indicates (via CPUID                                                                           // Colorize: green
#define X86_CR4_KEY_LOCKER_ENABLE_BIT                            (1ULL << 19) // When set, the LOADIWKEY instruction is enabled; in addition, if support for the AES Key Locker instructions has been activated by system firmware, CPUID // Colorize: green
#define X86_CR4_SUPERVISOR_MODE_EXECUTION_PROTECTION_ENABLE      (1ULL << 20) // Enables supervisor-mode execution prevention (SMEP) when set                                                            // Colorize: green
#define X86_CR4_SUPERVISOR_MODE_ACCESS_PROTECTION_ENABLE         (1ULL << 21) // Enables supervisor-mode access prevention (SMAP) when set                                                               // Colorize: green
#define X86_CR4_ENABLE_PROTECTION_KEYS_FOR_USER_MODE_PAGES       (1ULL << 22) // 4-level paging and 5-level paging associate each user-mode linear address with a protection key                         // Colorize: green
#define X86_CR4_CONTROL_FLOW_ENFORCEMENT_TECHNOLOGY              (1ULL << 23) // Enables control-flow enforcement technology when set                                                                    // Colorize: green
#define X86_CR4_ENABLE_PROTECTION_KEYS_FOR_SUPERVISOR_MODE_PAGES (1ULL << 24) // 4-level paging and 5-level paging associate each supervisor-mode linear address with a protection key                   // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
#endif // COM_NGOS_SHARED_COMMON_CPU_LIB_GENERATED_X86CR4_H                                                                                                                                              // Colorize: green
