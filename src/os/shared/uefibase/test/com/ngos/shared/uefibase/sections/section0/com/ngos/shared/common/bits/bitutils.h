#ifndef COM_NGOS_SHARED_UEFIBASE_SECTIONS_SECTION0_COM_NGOS_SHARED_COMMON_BITS_BITUTILS_H                                                                                                                // Colorize: green
#define COM_NGOS_SHARED_UEFIBASE_SECTIONS_SECTION0_COM_NGOS_SHARED_COMMON_BITS_BITUTILS_H                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
#include <buildconfig.h>                                                                                                                                                                                 // Colorize: green
#include <com/ngos/shared/common/bits/bitutils.h>                                                                                                                                                        // Colorize: green
#include <com/ngos/shared/uefibase/testengine.h>                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
#if NGOS_BUILD_TEST_MODE == OPTION_YES                                                                                                                                                                   // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
TEST_CASES(section0, com_ngos_shared_common_bits_bitutils);                                                                                                                                              // Colorize: green
{                                                                                                                                                                                                        // Colorize: green
    TEST_CASE("CONST_BIT_ADDRESS()");                                                                                                                                                                    // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        good_U8 buffer[] = { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08 };                                                                                                                           // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_ADDRESS(&buffer[0], 0),  &buffer[0]);                                                                                                                               // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_ADDRESS(&buffer[0], 3),  &buffer[0]);                                                                                                                               // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_ADDRESS(&buffer[0], 8),  &buffer[1]);                                                                                                                               // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_ADDRESS(&buffer[0], 13), &buffer[1]);                                                                                                                               // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_ADDRESS(&buffer[0], 15), &buffer[1]);                                                                                                                               // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_ADDRESS(&buffer[0], 16), &buffer[2]);                                                                                                                               // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_ADDRESS(&buffer[0], 17), &buffer[2]);                                                                                                                               // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_ADDRESS(&buffer[5], 9),  &buffer[6]);                                                                                                                               // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_ADDRESS(&buffer[5], 20), &buffer[7]);                                                                                                                               // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("CONST_BIT_IN_U8()");                                                                                                                                                                      // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_IN_U8(0), 0x80);                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_IN_U8(1), 0x40);                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_IN_U8(2), 0x20);                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_IN_U8(3), 0x10);                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_IN_U8(4), 0x08);                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_IN_U8(5), 0x04);                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_IN_U8(6), 0x02);                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_IN_U8(7), 0x01);                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_IN_U8(8), 0x80);                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(CONST_BIT_IN_U8(9), 0x40);                                                                                                                                                    // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("test()");                                                                                                                                                                                 // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        good_U8 buffer[] =                                                                                                                                                                               // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            0x10, 0x20, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80,                                                                                                                                              // Colorize: green
            0x11, 0x21, 0x31, 0x41, 0x51, 0x61, 0x71, 0x81,                                                                                                                                              // Colorize: green
            0x12, 0x22, 0x32, 0x42, 0x52, 0x62, 0x72, 0x82,                                                                                                                                              // Colorize: green
            0x13, 0x23, 0x33, 0x43, 0x53, 0x63, 0x73, 0x83,                                                                                                                                              // Colorize: green
            0x14, 0x24, 0x34, 0x44, 0x54, 0x64, 0x74, 0x84                                                                                                                                               // Colorize: green
        };                                                                                                                                                                                               // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 100), true);  // 0x51, bit 4 = 1                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 87),  false); // 0x31, bit 7 = 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 37),  false); // 0x50, bit 5 = 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 13),  true);  // 0x20, bit 5 = 1                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 204), false); // 0x23, bit 4 = 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 123), false); // 0x81, bit 3 = 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 67),  false); // 0x11, bit 3 = 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 0),   false); // 0x10, bit 0 = 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 255), true);  // 0x83, bit 7 = 1                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 256), false); // 0x14, bit 0 = 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 300), false); // 0x64, bit 4 = 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 301), true);  // 0x64, bit 5 = 1                                                                                                                       // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        good_U8 temp = 0;                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        for (good_I64 i = 0; i < 10; ++i)                                                                                                                                                                // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            temp += temp + 3;                                                                                                                                                                            // Colorize: green
        }                                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(temp, 253);                                                                                                                                                                   // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test((u8 *)buffer, temp),              false); // 0x83, bit 5 = 0                                                                                                   // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test((u8 *)buffer, (temp + 7) & 0xFF), true);  // 0x10, bit 4 = 1                                                                                                   // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("set()");                                                                                                                                                                                  // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        good_U8 buffer[] =                                                                                                                                                                               // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            0x10, 0x20, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80,                                                                                                                                              // Colorize: green
            0x11, 0x21, 0x31, 0x41, 0x51, 0x61, 0x71, 0x81,                                                                                                                                              // Colorize: green
            0x12, 0x22, 0x32, 0x42, 0x52, 0x62, 0x72, 0x82,                                                                                                                                              // Colorize: green
            0x13, 0x23, 0x33, 0x43, 0x53, 0x63, 0x73, 0x83,                                                                                                                                              // Colorize: green
            0x14, 0x24, 0x34, 0x44, 0x54, 0x64, 0x74, 0x84                                                                                                                                               // Colorize: green
        };                                                                                                                                                                                               // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[0],                 0x10);                                                                                                                                             // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 0), false);          // bit 0                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::set(buffer,  0), NgosStatus::OK); // bit 0                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 0), true);           // bit 0                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(buffer[0],                 0x11);                                                                                                                                             // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[12],                  0x51);                                                                                                                                           // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 101), false);          // bit 5                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::set(buffer,  101), NgosStatus::OK); // bit 5                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 101), true);           // bit 5                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(buffer[12],                  0x71);                                                                                                                                           // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[25],                  0x23);                                                                                                                                           // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 200), true);           // bit 0                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::set(buffer,  200), NgosStatus::OK); // bit 0                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 200), true);           // bit 0                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(buffer[25],                  0x23);                                                                                                                                           // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[37],                  0x64);                                                                                                                                           // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 301), true);           // bit 5                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::set(buffer,  301), NgosStatus::OK); // bit 5                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, 301), true);           // bit 5                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(buffer[37],                  0x64);                                                                                                                                           // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        good_U8 temp = 0;                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        for (good_I64 i = 0; i < 10; ++i)                                                                                                                                                                // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            temp += temp + 3;                                                                                                                                                                            // Colorize: green
        }                                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(temp, 253);                                                                                                                                                                   // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                   0x83);                                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, temp), false);          // bit 5                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::set(buffer,  temp), NgosStatus::OK); // bit 5                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, temp), true);           // bit 5                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                   0xA3);                                                                                                                                          // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                                0xA3);                                                                                                                             // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, (temp + 2) & 0xFF), true);           // bit 7                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::set(buffer,  (temp + 2) & 0xFF), NgosStatus::OK); // bit 7                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer, (temp + 2) & 0xFF), true);           // bit 7                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                                0xA3);                                                                                                                             // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("setSafe()");                                                                                                                                                                              // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        good_U8 buffer[] =                                                                                                                                                                               // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            0x10, 0x20, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80,                                                                                                                                              // Colorize: green
            0x11, 0x21, 0x31, 0x41, 0x51, 0x61, 0x71, 0x81,                                                                                                                                              // Colorize: green
            0x12, 0x22, 0x32, 0x42, 0x52, 0x62, 0x72, 0x82,                                                                                                                                              // Colorize: green
            0x13, 0x23, 0x33, 0x43, 0x53, 0x63, 0x73, 0x83,                                                                                                                                              // Colorize: green
            0x14, 0x24, 0x34, 0x44, 0x54, 0x64, 0x74, 0x84                                                                                                                                               // Colorize: green
        };                                                                                                                                                                                               // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[0],                    0x10);                                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,    0), false);          // bit 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::setSafe(buffer, 0), NgosStatus::OK); // bit 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,    0), true);           // bit 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(buffer[0],                    0x11);                                                                                                                                          // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[12],                     0x51);                                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,    101), false);          // bit 5                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::setSafe(buffer, 101), NgosStatus::OK); // bit 5                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,    101), true);           // bit 5                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(buffer[12],                     0x71);                                                                                                                                        // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[25],                     0x23);                                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,    200), true);           // bit 0                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::setSafe(buffer, 200), NgosStatus::OK); // bit 0                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,    200), true);           // bit 0                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(buffer[25],                     0x23);                                                                                                                                        // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[37],                     0x64);                                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,    301), true);           // bit 5                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::setSafe(buffer, 301), NgosStatus::OK); // bit 5                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,    301), true);           // bit 5                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(buffer[37],                     0x64);                                                                                                                                        // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        good_U8 temp = 0;                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        for (good_I64 i = 0; i < 10; ++i)                                                                                                                                                                // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            temp += temp + 3;                                                                                                                                                                            // Colorize: green
        }                                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(temp, 253);                                                                                                                                                                   // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                      0x83);                                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,    temp), false);          // bit 5                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::setSafe(buffer, temp), NgosStatus::OK); // bit 5                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,    temp), true);           // bit 5                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                      0xA3);                                                                                                                                       // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                                   0xA3);                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,    (temp + 2) & 0xFF), true);           // bit 7                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::setSafe(buffer, (temp + 2) & 0xFF), NgosStatus::OK); // bit 7                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,    (temp + 2) & 0xFF), true);           // bit 7                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                                   0xA3);                                                                                                                          // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("clear()");                                                                                                                                                                                // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        good_U8 buffer[] =                                                                                                                                                                               // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            0x10, 0x20, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80,                                                                                                                                              // Colorize: green
            0x11, 0x21, 0x31, 0x41, 0x51, 0x61, 0x71, 0x81,                                                                                                                                              // Colorize: green
            0x12, 0x22, 0x32, 0x42, 0x52, 0x62, 0x72, 0x82,                                                                                                                                              // Colorize: green
            0x13, 0x23, 0x33, 0x43, 0x53, 0x63, 0x73, 0x83,                                                                                                                                              // Colorize: green
            0x14, 0x24, 0x34, 0x44, 0x54, 0x64, 0x74, 0x84                                                                                                                                               // Colorize: green
        };                                                                                                                                                                                               // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[0],                  0x10);                                                                                                                                            // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,  0), false);          // bit 0                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::clear(buffer, 0), NgosStatus::OK); // bit 0                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,  0), false);          // bit 0                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[0],                  0x10);                                                                                                                                            // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[12],                   0x51);                                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,  101), false);          // bit 5                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::clear(buffer, 101), NgosStatus::OK); // bit 5                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,  101), false);          // bit 5                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(buffer[12],                   0x51);                                                                                                                                          // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[25],                   0x23);                                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,  200), true);           // bit 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::clear(buffer, 200), NgosStatus::OK); // bit 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,  200), false);          // bit 0                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(buffer[25],                   0x22);                                                                                                                                          // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[37],                   0x64);                                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,  301), true);           // bit 5                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::clear(buffer, 301), NgosStatus::OK); // bit 5                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,  301), false);          // bit 5                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(buffer[37],                   0x44);                                                                                                                                          // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        good_U8 temp = 0;                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        for (good_I64 i = 0; i < 10; ++i)                                                                                                                                                                // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            temp += temp + 3;                                                                                                                                                                            // Colorize: green
        }                                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(temp, 253);                                                                                                                                                                   // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                    0x83);                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,  temp), false);          // bit 5                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::clear(buffer, temp), NgosStatus::OK); // bit 5                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,  temp), false);          // bit 5                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                    0x83);                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                                 0x83);                                                                                                                            // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,  (temp + 2) & 0xFF), true);           // bit 7                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::clear(buffer, (temp + 2) & 0xFF), NgosStatus::OK); // bit 7                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,  (temp + 2) & 0xFF), false);          // bit 7                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                                 0x03);                                                                                                                            // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("clearSafe()");                                                                                                                                                                            // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        good_U8 buffer[] =                                                                                                                                                                               // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            0x10, 0x20, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80,                                                                                                                                              // Colorize: green
            0x11, 0x21, 0x31, 0x41, 0x51, 0x61, 0x71, 0x81,                                                                                                                                              // Colorize: green
            0x12, 0x22, 0x32, 0x42, 0x52, 0x62, 0x72, 0x82,                                                                                                                                              // Colorize: green
            0x13, 0x23, 0x33, 0x43, 0x53, 0x63, 0x73, 0x83,                                                                                                                                              // Colorize: green
            0x14, 0x24, 0x34, 0x44, 0x54, 0x64, 0x74, 0x84                                                                                                                                               // Colorize: green
        };                                                                                                                                                                                               // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[0],                      0x10);                                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,      0), false);          // bit 0                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::clearSafe(buffer, 0), NgosStatus::OK); // bit 0                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,      0), false);          // bit 0                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(buffer[0],                      0x10);                                                                                                                                        // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[12],                       0x51);                                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,      101), false);          // bit 5                                                                                                                   // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::clearSafe(buffer, 101), NgosStatus::OK); // bit 5                                                                                                                   // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,      101), false);          // bit 5                                                                                                                   // Colorize: green
        TEST_ASSERT_EQUALS(buffer[12],                       0x51);                                                                                                                                      // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[25],                       0x23);                                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,      200), true);           // bit 0                                                                                                                   // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::clearSafe(buffer, 200), NgosStatus::OK); // bit 0                                                                                                                   // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,      200), false);          // bit 0                                                                                                                   // Colorize: green
        TEST_ASSERT_EQUALS(buffer[25],                       0x22);                                                                                                                                      // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[37],                       0x64);                                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,      301), true);           // bit 5                                                                                                                   // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::clearSafe(buffer, 301), NgosStatus::OK); // bit 5                                                                                                                   // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,      301), false);          // bit 5                                                                                                                   // Colorize: green
        TEST_ASSERT_EQUALS(buffer[37],                       0x44);                                                                                                                                      // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        good_U8 temp = 0;                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        for (good_I64 i = 0; i < 10; ++i)                                                                                                                                                                // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            temp += temp + 3;                                                                                                                                                                            // Colorize: green
        }                                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(temp, 253);                                                                                                                                                                   // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                        0x83);                                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,      temp), false);          // bit 5                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::clearSafe(buffer, temp), NgosStatus::OK); // bit 5                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,      temp), false);          // bit 5                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                        0x83);                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                                     0x83);                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,      (temp + 2) & 0xFF), true);           // bit 7                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::clearSafe(buffer, (temp + 2) & 0xFF), NgosStatus::OK); // bit 7                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,      (temp + 2) & 0xFF), false);          // bit 7                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                                     0x03);                                                                                                                        // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("invert()");                                                                                                                                                                               // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        good_U8 buffer[] =                                                                                                                                                                               // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            0x10, 0x20, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80,                                                                                                                                              // Colorize: green
            0x11, 0x21, 0x31, 0x41, 0x51, 0x61, 0x71, 0x81,                                                                                                                                              // Colorize: green
            0x12, 0x22, 0x32, 0x42, 0x52, 0x62, 0x72, 0x82,                                                                                                                                              // Colorize: green
            0x13, 0x23, 0x33, 0x43, 0x53, 0x63, 0x73, 0x83,                                                                                                                                              // Colorize: green
            0x14, 0x24, 0x34, 0x44, 0x54, 0x64, 0x74, 0x84                                                                                                                                               // Colorize: green
        };                                                                                                                                                                                               // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[0],                   0x10);                                                                                                                                           // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,   0), false);          // bit 0                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::invert(buffer, 0), NgosStatus::OK); // bit 0                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,   0), true);           // bit 0                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(buffer[0],                   0x11);                                                                                                                                           // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[12],                    0x51);                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,   101), false);          // bit 5                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::invert(buffer, 101), NgosStatus::OK); // bit 5                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,   101), true);           // bit 5                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(buffer[12],                    0x71);                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[25],                    0x23);                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,   200), true);           // bit 0                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::invert(buffer, 200), NgosStatus::OK); // bit 0                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,   200), false);          // bit 0                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(buffer[25],                    0x22);                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[37],                    0x64);                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,   301), true);           // bit 5                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::invert(buffer, 301), NgosStatus::OK); // bit 5                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,   301), false);          // bit 5                                                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(buffer[37],                    0x44);                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        good_U8 temp = 0;                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        for (good_I64 i = 0; i < 10; ++i)                                                                                                                                                                // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            temp += temp + 3;                                                                                                                                                                            // Colorize: green
        }                                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(temp, 253);                                                                                                                                                                   // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                     0x83);                                                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,   temp), false);          // bit 5                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::invert(buffer, temp), NgosStatus::OK); // bit 5                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,   temp), true);           // bit 5                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                     0xA3);                                                                                                                                        // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                                  0xA3);                                                                                                                           // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,   (temp + 2) & 0xFF), true);           // bit 7                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::invert(buffer, (temp + 2) & 0xFF), NgosStatus::OK); // bit 7                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,   (temp + 2) & 0xFF), false);          // bit 7                                                                                                        // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                                  0x23);                                                                                                                           // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("invertSafe()");                                                                                                                                                                           // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        good_U8 buffer[] =                                                                                                                                                                               // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            0x10, 0x20, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80,                                                                                                                                              // Colorize: green
            0x11, 0x21, 0x31, 0x41, 0x51, 0x61, 0x71, 0x81,                                                                                                                                              // Colorize: green
            0x12, 0x22, 0x32, 0x42, 0x52, 0x62, 0x72, 0x82,                                                                                                                                              // Colorize: green
            0x13, 0x23, 0x33, 0x43, 0x53, 0x63, 0x73, 0x83,                                                                                                                                              // Colorize: green
            0x14, 0x24, 0x34, 0x44, 0x54, 0x64, 0x74, 0x84                                                                                                                                               // Colorize: green
        };                                                                                                                                                                                               // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[0],                       0x10);                                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,       0), false);          // bit 0                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::invertSafe(buffer, 0), NgosStatus::OK); // bit 0                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,       0), true);           // bit 0                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(buffer[0],                       0x11);                                                                                                                                       // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[12],                        0x51);                                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,       101), false);          // bit 5                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::invertSafe(buffer, 101), NgosStatus::OK); // bit 5                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,       101), true);           // bit 5                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(buffer[12],                        0x71);                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[25],                        0x23);                                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,       200), true);           // bit 0                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::invertSafe(buffer, 200), NgosStatus::OK); // bit 0                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,       200), false);          // bit 0                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(buffer[25],                        0x22);                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[37],                        0x64);                                                                                                                                     // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,       301), true);           // bit 5                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::invertSafe(buffer, 301), NgosStatus::OK); // bit 5                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,       301), false);          // bit 5                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(buffer[37],                        0x44);                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        good_U8 temp = 0;                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        for (good_I64 i = 0; i < 10; ++i)                                                                                                                                                                // Colorize: green
        {                                                                                                                                                                                                // Colorize: green
            temp += temp + 3;                                                                                                                                                                            // Colorize: green
        }                                                                                                                                                                                                // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(temp, 253);                                                                                                                                                                   // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                         0x83);                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,       temp), false);          // bit 5                                                                                                                 // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::invertSafe(buffer, temp), NgosStatus::OK); // bit 5                                                                                                                 // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,       temp), true);           // bit 5                                                                                                                 // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                         0xA3);                                                                                                                                    // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                                      0xA3);                                                                                                                       // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,       (temp + 2) & 0xFF), true);           // bit 7                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::invertSafe(buffer, (temp + 2) & 0xFF), NgosStatus::OK); // bit 7                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::test(buffer,       (temp + 2) & 0xFF), false);          // bit 7                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(buffer[31],                                      0x23);                                                                                                                       // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("rotateLeft8()");                                                                                                                                                                          // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft8(0xAB, 0), 0xAB);   // 10101011                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft8(0xAB, 1), 0x57);   // 01010111                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft8(0xAB, 2), 0xAE);   // 10101110                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft8(0xAB, 3), 0x5D);   // 01011101                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft8(0xAB, 4), 0xBA);   // 10111010                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft8(0xAB, 5), 0x75);   // 01110101                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft8(0xAB, 6), 0xEA);   // 11101010                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft8(0xAB, 7), 0xD5);   // 11010101                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft8(0xAB, 8), 0xAB);   // 10101011                                                                                                                          // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("rotateLeft16()");                                                                                                                                                                         // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 0),  0x46AB); // 0100011010101011                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 1),  0x8D56); // 1000110101010110                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 2),  0x1AAD); // 0001101010101101                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 3),  0x355A); // 0011010101011010                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 4),  0x6AB4); // 0110101010110100                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 5),  0xD568); // 1101010101101000                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 6),  0xAAD1); // 1010101011010001                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 7),  0x55A3); // 0101010110100011                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 8),  0xAB46); // 1010101101000110                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 9),  0x568D); // 0101011010001101                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 10), 0xAD1A); // 1010110100011010                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 11), 0x5A35); // 0101101000110101                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 12), 0xB46A); // 1011010001101010                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 13), 0x68D5); // 0110100011010101                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 14), 0xD1AA); // 1101000110101010                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 15), 0xA355); // 1010001101010101                                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft16(0x46AB, 16), 0x46AB); // 0100011010101011                                                                                                              // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("rotateLeft32()");                                                                                                                                                                         // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 0),  0xDC9A46AB); // 11011100100110100100011010101011                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 1),  0xB9348D57); // 10111001001101001000110101010111                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 2),  0x72691AAF); // 01110010011010010001101010101111                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 3),  0xE4D2355E); // 11100100110100100011010101011110                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 4),  0xC9A46ABD); // 11001001101001000110101010111101                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 5),  0x9348D57B); // 10010011010010001101010101111011                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 6),  0x2691AAF7); // 00100110100100011010101011110111                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 7),  0x4D2355EE); // 01001101001000110101010111101110                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 8),  0x9A46ABDC); // 10011010010001101010101111011100                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 9),  0x348D57B9); // 00110100100011010101011110111001                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 10), 0x691AAF72); // 01101001000110101010111101110010                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 11), 0xD2355EE4); // 11010010001101010101111011100100                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 12), 0xA46ABDC9); // 10100100011010101011110111001001                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 13), 0x48D57B93); // 01001000110101010111101110010011                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 14), 0x91AAF726); // 10010001101010101111011100100110                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 15), 0x2355EE4D); // 00100011010101011110111001001101                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 16), 0x46ABDC9A); // 01000110101010111101110010011010                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 17), 0x8D57B934); // 10001101010101111011100100110100                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 18), 0x1AAF7269); // 00011010101011110111001001101001                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 19), 0x355EE4D2); // 00110101010111101110010011010010                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 20), 0x6ABDC9A4); // 01101010101111011100100110100100                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 21), 0xD57B9348); // 11010101011110111001001101001000                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 22), 0xAAF72691); // 10101010111101110010011010010001                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 23), 0x55EE4D23); // 01010101111011100100110100100011                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 24), 0xABDC9A46); // 10101011110111001001101001000110                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 25), 0x57B9348D); // 01010111101110010011010010001101                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 26), 0xAF72691A); // 10101111011100100110100100011010                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 27), 0x5EE4D235); // 01011110111001001101001000110101                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 28), 0xBDC9A46A); // 10111101110010011010010001101010                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 29), 0x7B9348D5); // 01111011100100110100100011010101                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 30), 0xF72691AA); // 11110111001001101001000110101010                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 31), 0xEE4D2355); // 11101110010011010010001101010101                                                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft32(0xDC9A46AB, 32), 0xDC9A46AB); // 11011100100110100100011010101011                                                                                      // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("rotateLeft64()");                                                                                                                                                                         // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 0),  0xA1D767171C9A46AB); // 1010000111010111011001110001011100011100100110100100011010101011                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 1),  0x43AECE2E39348D57); // 0100001110101110110011100010111000111001001101001000110101010111                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 2),  0x875D9C5C72691AAE); // 1000011101011101100111000101110001110010011010010001101010101110                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 3),  0x0EBB38B8E4D2355D); // 0000111010111011001110001011100011100100110100100011010101011101                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 4),  0x1D767171C9A46ABA); // 0001110101110110011100010111000111001001101001000110101010111010                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 5),  0x3AECE2E39348D574); // 0011101011101100111000101110001110010011010010001101010101110100                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 6),  0x75D9C5C72691AAE8); // 0111010111011001110001011100011100100110100100011010101011101000                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 7),  0xEBB38B8E4D2355D0); // 1110101110110011100010111000111001001101001000110101010111010000                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 8),  0xD767171C9A46ABA1); // 1101011101100111000101110001110010011010010001101010101110100001                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 9),  0xAECE2E39348D5743); // 1010111011001110001011100011100100110100100011010101011101000011                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 10), 0x5D9C5C72691AAE87); // 0101110110011100010111000111001001101001000110101010111010000111                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 11), 0xBB38B8E4D2355D0E); // 1011101100111000101110001110010011010010001101010101110100001110                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 12), 0x767171C9A46ABA1D); // 0111011001110001011100011100100110100100011010101011101000011101                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 13), 0xECE2E39348D5743A); // 1110110011100010111000111001001101001000110101010111010000111010                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 14), 0xD9C5C72691AAE875); // 1101100111000101110001110010011010010001101010101110100001110101                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 15), 0xB38B8E4D2355D0EB); // 1011001110001011100011100100110100100011010101011101000011101011                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 16), 0x67171C9A46ABA1D7); // 0110011100010111000111001001101001000110101010111010000111010111                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 17), 0xCE2E39348D5743AE); // 1100111000101110001110010011010010001101010101110100001110101110                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 18), 0x9C5C72691AAE875D); // 1001110001011100011100100110100100011010101011101000011101011101                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 19), 0x38B8E4D2355D0EBB); // 0011100010111000111001001101001000110101010111010000111010111011                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 20), 0x7171C9A46ABA1D76); // 0111000101110001110010011010010001101010101110100001110101110110                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 21), 0xE2E39348D5743AEC); // 1110001011100011100100110100100011010101011101000011101011101100                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 22), 0xC5C72691AAE875D9); // 1100010111000111001001101001000110101010111010000111010111011001                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 23), 0x8B8E4D2355D0EBB3); // 1000101110001110010011010010001101010101110100001110101110110011                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 24), 0x171C9A46ABA1D767); // 0001011100011100100110100100011010101011101000011101011101100111                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 25), 0x2E39348D5743AECE); // 0010111000111001001101001000110101010111010000111010111011001110                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 26), 0x5C72691AAE875D9C); // 0101110001110010011010010001101010101110100001110101110110011100                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 27), 0xB8E4D2355D0EBB38); // 1011100011100100110100100011010101011101000011101011101100111000                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 28), 0x71C9A46ABA1D7671); // 0111000111001001101001000110101010111010000111010111011001110001                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 29), 0xE39348D5743AECE2); // 1110001110010011010010001101010101110100001110101110110011100010                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 30), 0xC72691AAE875D9C5); // 1100011100100110100100011010101011101000011101011101100111000101                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 31), 0x8E4D2355D0EBB38B); // 1000111001001101001000110101010111010000111010111011001110001011                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 32), 0x1C9A46ABA1D76717); // 0001110010011010010001101010101110100001110101110110011100010111                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 33), 0x39348D5743AECE2E); // 0011100100110100100011010101011101000011101011101100111000101110                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 34), 0x72691AAE875D9C5C); // 0111001001101001000110101010111010000111010111011001110001011100                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 35), 0xE4D2355D0EBB38B8); // 1110010011010010001101010101110100001110101110110011100010111000                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 36), 0xC9A46ABA1D767171); // 1100100110100100011010101011101000011101011101100111000101110001                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 37), 0x9348D5743AECE2E3); // 1001001101001000110101010111010000111010111011001110001011100011                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 38), 0x2691AAE875D9C5C7); // 0010011010010001101010101110100001110101110110011100010111000111                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 39), 0x4D2355D0EBB38B8E); // 0100110100100011010101011101000011101011101100111000101110001110                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 40), 0x9A46ABA1D767171C); // 1001101001000110101010111010000111010111011001110001011100011100                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 41), 0x348D5743AECE2E39); // 0011010010001101010101110100001110101110110011100010111000111001                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 42), 0x691AAE875D9C5C72); // 0110100100011010101011101000011101011101100111000101110001110010                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 43), 0xD2355D0EBB38B8E4); // 1101001000110101010111010000111010111011001110001011100011100100                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 44), 0xA46ABA1D767171C9); // 1010010001101010101110100001110101110110011100010111000111001001                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 45), 0x48D5743AECE2E393); // 0100100011010101011101000011101011101100111000101110001110010011                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 46), 0x91AAE875D9C5C726); // 1001000110101010111010000111010111011001110001011100011100100110                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 47), 0x2355D0EBB38B8E4D); // 0010001101010101110100001110101110110011100010111000111001001101                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 48), 0x46ABA1D767171C9A); // 0100011010101011101000011101011101100111000101110001110010011010                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 49), 0x8D5743AECE2E3934); // 1000110101010111010000111010111011001110001011100011100100110100                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 50), 0x1AAE875D9C5C7269); // 0001101010101110100001110101110110011100010111000111001001101001                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 51), 0x355D0EBB38B8E4D2); // 0011010101011101000011101011101100111000101110001110010011010010                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 52), 0x6ABA1D767171C9A4); // 0110101010111010000111010111011001110001011100011100100110100100                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 53), 0xD5743AECE2E39348); // 1101010101110100001110101110110011100010111000111001001101001000                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 54), 0xAAE875D9C5C72691); // 1010101011101000011101011101100111000101110001110010011010010001                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 55), 0x55D0EBB38B8E4D23); // 0101010111010000111010111011001110001011100011100100110100100011                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 56), 0xABA1D767171C9A46); // 1010101110100001110101110110011100010111000111001001101001000110                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 57), 0x5743AECE2E39348D); // 0101011101000011101011101100111000101110001110010011010010001101                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 58), 0xAE875D9C5C72691A); // 1010111010000111010111011001110001011100011100100110100100011010                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 59), 0x5D0EBB38B8E4D235); // 0101110100001110101110110011100010111000111001001101001000110101                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 60), 0xBA1D767171C9A46A); // 1011101000011101011101100111000101110001110010011010010001101010                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 61), 0x743AECE2E39348D5); // 0111010000111010111011001110001011100011100100110100100011010101                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 62), 0xE875D9C5C72691AA); // 1110100001110101110110011100010111000111001001101001000110101010                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 63), 0xD0EBB38B8E4D2355); // 1101000011101011101100111000101110001110010011010010001101010101                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateLeft64(0xA1D767171C9A46AB, 64), 0xA1D767171C9A46AB); // 1010000111010111011001110001011100011100100110100100011010101011                                      // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("rotateRight8()");                                                                                                                                                                         // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight8(0xAB, 0), 0xAB);  // 10101011                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight8(0xAB, 1), 0xD5);  // 11010101                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight8(0xAB, 2), 0xEA);  // 11101010                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight8(0xAB, 3), 0x75);  // 01110101                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight8(0xAB, 4), 0xBA);  // 10111010                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight8(0xAB, 5), 0x5D);  // 01011101                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight8(0xAB, 6), 0xAE);  // 10101110                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight8(0xAB, 7), 0x57);  // 01010111                                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight8(0xAB, 8), 0xAB);  // 10101011                                                                                                                          // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("rotateRight16()");                                                                                                                                                                        // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 0),  0x46AB);    // 0100011010101011                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 1),  0xA355);    // 1010001101010101                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 2),  0xD1AA);    // 1101000110101010                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 3),  0x68D5);    // 0110100011010101                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 4),  0xB46A);    // 1011010001101010                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 5),  0x5A35);    // 0101101000110101                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 6),  0xAD1A);    // 1010110100011010                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 7),  0x568D);    // 0101011010001101                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 8),  0xAB46);    // 1010101101000110                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 9),  0x55A3);    // 0101010110100011                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 10), 0xAAD1);    // 1010101011010001                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 11), 0xD568);    // 1101010101101000                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 12), 0x6AB4);    // 0110101010110100                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 13), 0x355A);    // 0011010101011010                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 14), 0x1AAD);    // 0001101010101101                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 15), 0x8D56);    // 1000110101010110                                                                                                          // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight16(0x46AB, 16), 0x46AB);    // 0100011010101011                                                                                                          // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("rotateRight32()");                                                                                                                                                                        // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 0),  0xDC9A46AB);    // 11011100100110100100011010101011                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 1),  0xEE4D2355);    // 11101110010011010010001101010101                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 2),  0xF72691AA);    // 11110111001001101001000110101010                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 3),  0x7B9348D5);    // 01111011100100110100100011010101                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 4),  0xBDC9A46A);    // 10111101110010011010010001101010                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 5),  0x5EE4D235);    // 01011110111001001101001000110101                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 6),  0xAF72691A);    // 10101111011100100110100100011010                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 7),  0x57B9348D);    // 01010111101110010011010010001101                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 8),  0xABDC9A46);    // 10101011110111001001101001000110                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 9),  0x55EE4D23);    // 01010101111011100100110100100011                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 10), 0xAAF72691);    // 10101010111101110010011010010001                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 11), 0xD57B9348);    // 11010101011110111001001101001000                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 12), 0x6ABDC9A4);    // 01101010101111011100100110100100                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 13), 0x355EE4D2);    // 00110101010111101110010011010010                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 14), 0x1AAF7269);    // 00011010101011110111001001101001                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 15), 0x8D57B934);    // 10001101010101111011100100110100                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 16), 0x46ABDC9A);    // 01000110101010111101110010011010                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 17), 0x2355EE4D);    // 00100011010101011110111001001101                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 18), 0x91AAF726);    // 10010001101010101111011100100110                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 19), 0x48D57B93);    // 01001000110101010111101110010011                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 20), 0xA46ABDC9);    // 10100100011010101011110111001001                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 21), 0xD2355EE4);    // 11010010001101010101111011100100                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 22), 0x691AAF72);    // 01101001000110101010111101110010                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 23), 0x348D57B9);    // 00110100100011010101011110111001                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 24), 0x9A46ABDC);    // 10011010010001101010101111011100                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 25), 0x4D2355EE);    // 01001101001000110101010111101110                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 26), 0x2691AAF7);    // 00100110100100011010101011110111                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 27), 0x9348D57B);    // 10010011010010001101010101111011                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 28), 0xC9A46ABD);    // 11001001101001000110101010111101                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 29), 0xE4D2355E);    // 11100100110100100011010101011110                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 30), 0x72691AAF);    // 01110010011010010001101010101111                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 31), 0xB9348D57);    // 10111001001101001000110101010111                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight32(0xDC9A46AB, 32), 0xDC9A46AB);    // 11011100100110100100011010101011                                                                                  // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("rotateRight64()");                                                                                                                                                                        // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 0),  0xA1D767171C9A46AB);    // 1010000111010111011001110001011100011100100110100100011010101011                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 1),  0xD0EBB38B8E4D2355);    // 1101000011101011101100111000101110001110010011010010001101010101                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 2),  0xE875D9C5C72691AA);    // 1110100001110101110110011100010111000111001001101001000110101010                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 3),  0x743AECE2E39348D5);    // 0111010000111010111011001110001011100011100100110100100011010101                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 4),  0xBA1D767171C9A46A);    // 1011101000011101011101100111000101110001110010011010010001101010                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 5),  0x5D0EBB38B8E4D235);    // 0101110100001110101110110011100010111000111001001101001000110101                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 6),  0xAE875D9C5C72691A);    // 1010111010000111010111011001110001011100011100100110100100011010                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 7),  0x5743AECE2E39348D);    // 0101011101000011101011101100111000101110001110010011010010001101                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 8),  0xABA1D767171C9A46);    // 1010101110100001110101110110011100010111000111001001101001000110                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 9),  0x55D0EBB38B8E4D23);    // 0101010111010000111010111011001110001011100011100100110100100011                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 10), 0xAAE875D9C5C72691);    // 1010101011101000011101011101100111000101110001110010011010010001                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 11), 0xD5743AECE2E39348);    // 1101010101110100001110101110110011100010111000111001001101001000                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 12), 0x6ABA1D767171C9A4);    // 0110101010111010000111010111011001110001011100011100100110100100                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 13), 0x355D0EBB38B8E4D2);    // 0011010101011101000011101011101100111000101110001110010011010010                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 14), 0x1AAE875D9C5C7269);    // 0001101010101110100001110101110110011100010111000111001001101001                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 15), 0x8D5743AECE2E3934);    // 1000110101010111010000111010111011001110001011100011100100110100                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 16), 0x46ABA1D767171C9A);    // 0100011010101011101000011101011101100111000101110001110010011010                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 17), 0x2355D0EBB38B8E4D);    // 0010001101010101110100001110101110110011100010111000111001001101                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 18), 0x91AAE875D9C5C726);    // 1001000110101010111010000111010111011001110001011100011100100110                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 19), 0x48D5743AECE2E393);    // 0100100011010101011101000011101011101100111000101110001110010011                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 20), 0xA46ABA1D767171C9);    // 1010010001101010101110100001110101110110011100010111000111001001                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 21), 0xD2355D0EBB38B8E4);    // 1101001000110101010111010000111010111011001110001011100011100100                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 22), 0x691AAE875D9C5C72);    // 0110100100011010101011101000011101011101100111000101110001110010                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 23), 0x348D5743AECE2E39);    // 0011010010001101010101110100001110101110110011100010111000111001                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 24), 0x9A46ABA1D767171C);    // 1001101001000110101010111010000111010111011001110001011100011100                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 25), 0x4D2355D0EBB38B8E);    // 0100110100100011010101011101000011101011101100111000101110001110                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 26), 0x2691AAE875D9C5C7);    // 0010011010010001101010101110100001110101110110011100010111000111                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 27), 0x9348D5743AECE2E3);    // 1001001101001000110101010111010000111010111011001110001011100011                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 28), 0xC9A46ABA1D767171);    // 1100100110100100011010101011101000011101011101100111000101110001                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 29), 0xE4D2355D0EBB38B8);    // 1110010011010010001101010101110100001110101110110011100010111000                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 30), 0x72691AAE875D9C5C);    // 0111001001101001000110101010111010000111010111011001110001011100                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 31), 0x39348D5743AECE2E);    // 0011100100110100100011010101011101000011101011101100111000101110                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 32), 0x1C9A46ABA1D76717);    // 0001110010011010010001101010101110100001110101110110011100010111                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 33), 0x8E4D2355D0EBB38B);    // 1000111001001101001000110101010111010000111010111011001110001011                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 34), 0xC72691AAE875D9C5);    // 1100011100100110100100011010101011101000011101011101100111000101                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 35), 0xE39348D5743AECE2);    // 1110001110010011010010001101010101110100001110101110110011100010                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 36), 0x71C9A46ABA1D7671);    // 0111000111001001101001000110101010111010000111010111011001110001                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 37), 0xB8E4D2355D0EBB38);    // 1011100011100100110100100011010101011101000011101011101100111000                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 38), 0x5C72691AAE875D9C);    // 0101110001110010011010010001101010101110100001110101110110011100                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 39), 0x2E39348D5743AECE);    // 0010111000111001001101001000110101010111010000111010111011001110                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 40), 0x171C9A46ABA1D767);    // 0001011100011100100110100100011010101011101000011101011101100111                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 41), 0x8B8E4D2355D0EBB3);    // 1000101110001110010011010010001101010101110100001110101110110011                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 42), 0xC5C72691AAE875D9);    // 1100010111000111001001101001000110101010111010000111010111011001                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 43), 0xE2E39348D5743AEC);    // 1110001011100011100100110100100011010101011101000011101011101100                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 44), 0x7171C9A46ABA1D76);    // 0111000101110001110010011010010001101010101110100001110101110110                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 45), 0x38B8E4D2355D0EBB);    // 0011100010111000111001001101001000110101010111010000111010111011                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 46), 0x9C5C72691AAE875D);    // 1001110001011100011100100110100100011010101011101000011101011101                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 47), 0xCE2E39348D5743AE);    // 1100111000101110001110010011010010001101010101110100001110101110                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 48), 0x67171C9A46ABA1D7);    // 0110011100010111000111001001101001000110101010111010000111010111                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 49), 0xB38B8E4D2355D0EB);    // 1011001110001011100011100100110100100011010101011101000011101011                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 50), 0xD9C5C72691AAE875);    // 1101100111000101110001110010011010010001101010101110100001110101                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 51), 0xECE2E39348D5743A);    // 1110110011100010111000111001001101001000110101010111010000111010                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 52), 0x767171C9A46ABA1D);    // 0111011001110001011100011100100110100100011010101011101000011101                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 53), 0xBB38B8E4D2355D0E);    // 1011101100111000101110001110010011010010001101010101110100001110                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 54), 0x5D9C5C72691AAE87);    // 0101110110011100010111000111001001101001000110101010111010000111                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 55), 0xAECE2E39348D5743);    // 1010111011001110001011100011100100110100100011010101011101000011                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 56), 0xD767171C9A46ABA1);    // 1101011101100111000101110001110010011010010001101010101110100001                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 57), 0xEBB38B8E4D2355D0);    // 1110101110110011100010111000111001001101001000110101010111010000                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 58), 0x75D9C5C72691AAE8);    // 0111010111011001110001011100011100100110100100011010101011101000                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 59), 0x3AECE2E39348D574);    // 0011101011101100111000101110001110010011010010001101010101110100                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 60), 0x1D767171C9A46ABA);    // 0001110101110110011100010111000111001001101001000110101010111010                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 61), 0x0EBB38B8E4D2355D);    // 0000111010111011001110001011100011100100110100100011010101011101                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 62), 0x875D9C5C72691AAE);    // 1000011101011101100111000101110001110010011010010001101010101110                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 63), 0x43AECE2E39348D57);    // 0100001110101110110011100010111000111001001101001000110101010111                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::rotateRight64(0xA1D767171C9A46AB, 64), 0xA1D767171C9A46AB);    // 1010000111010111011001110001011100011100100110100100011010101011                                  // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("findFirstBit16()");                                                                                                                                                                       // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit16(0xAB11), 0);    // 1010101100010001                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit16(0x1300), 8);    // 0001001100000000                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit16(0xDDAC), 2);    // 1101110110101100                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit16(0xDDA0), 5);    // 1101110110100000                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit16(0xB800), 11);   // 1011100000000000                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit16(0x0000), -1);   // 0000000000000000                                                                                                                  // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("findFirstBit32()");                                                                                                                                                                       // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit32(0x4091AB11), 0);    // 01000000100100011010101100010001                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit32(0x13971300), 8);    // 00010011100101110001001100000000                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit32(0xDDADDDAC), 2);    // 11011101101011011101110110101100                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit32(0xBCDEDDA0), 5);    // 10111100110111101101110110100000                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit32(0x1ABBB800), 11);   // 00011010101110111011100000000000                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit32(0x37000000), 24);   // 00110111000000000000000000000000                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit32(0x00000000), -1);   // 00000000000000000000000000000000                                                                                              // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("findFirstBit64()");                                                                                                                                                                       // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit64(0x134AD0654091AB11), 0);    // 0001001101001010110100000110010101000000100100011010101100010001                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit64(0x9713298713971300), 8);    // 1001011100010011001010011000011100010011100101110001001100000000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit64(0xDADDDAAADDADDDAC), 2);    // 1101101011011101110110101010101011011101101011011101110110101100                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit64(0x321897ADBCDEDDA0), 5);    // 0011001000011000100101111010110110111100110111101101110110100000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit64(0x009813981ABBB800), 11);   // 0000000010011000000100111001100000011010101110111011100000000000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit64(0xABCD132437000000), 24);   // 1010101111001101000100110010010000110111000000000000000000000000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit64(0x9600000000000000), 57);   // 1001011000000000000000000000000000000000000000000000000000000000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstBit64(0x0000000000000000), -1);   // 0000000000000000000000000000000000000000000000000000000000000000                                                      // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("findFirstZero16()");                                                                                                                                                                      // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero16(0xAB11), 1);   // 1010101100010001                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero16(0x13FF), 10);  // 0001001111111111                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero16(0xDDFF), 9);   // 1101110111111111                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero16(0xDDAF), 4);   // 1101110110101111                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero16(0xB8FF), 8);   // 1011100011111111                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero16(0xFFFF), -1);  // 1111111111111111                                                                                                                  // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("findFirstZero32()");                                                                                                                                                                      // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero32(0x4091AB11), 1);   // 01000000100100011010101100010001                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero32(0x139713FF), 10);  // 00010011100101110001001111111111                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero32(0xDDADDDFF), 9);   // 11011101101011011101110111111111                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero32(0xBCDEDDAF), 4);   // 10111100110111101101110110101111                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero32(0x1ABBB8FF), 8);   // 00011010101110111011100011111111                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero32(0xB8FFFFFF), 24);  // 10111000111111111111111111111111                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero32(0xFFFFFFFF), -1);  // 11111111111111111111111111111111                                                                                              // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("findFirstZero64()");                                                                                                                                                                      // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero64(0x134AD0654091AB11), 1);   // 0001001101001010110100000110010101000000100100011010101100010001                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero64(0x97132987139713FF), 10);  // 1001011100010011001010011000011100010011100101110001001111111111                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero64(0xDADDDAAADDADDDFF), 9);   // 1101101011011101110110101010101011011101101011011101110111111111                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero64(0x321897ADBCDEDDAF), 4);   // 0011001000011000100101111010110110111100110111101101110110101111                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero64(0x009813981ABBB8FF), 8);   // 0000000010011000000100111001100000011010101110111011100011111111                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero64(0xA7137910B8FFFFFF), 24);  // 1010011100010011011110010001000010111000111111111111111111111111                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero64(0xA9FFFFFFFFFFFFFF), 57);  // 1010100111111111111111111111111111111111111111111111111111111111                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findFirstZero64(0xFFFFFFFFFFFFFFFF), -1);  // 1111111111111111111111111111111111111111111111111111111111111111                                                      // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("findLastBit16()");                                                                                                                                                                        // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit16(0x134A), 12);    // 0001001101001010                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit16(0x9713), 15);    // 1001011100010011                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit16(0xDADD), 15);    // 1101101011011101                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit16(0x3218), 13);    // 0011001000011000                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit16(0x0098), 7);     // 0000000010011000                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit16(0x0000), -1);    // 0000000000000000                                                                                                                  // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("findLastBit32()");                                                                                                                                                                        // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit32(0x134AD065), 28);    // 00010011010010101101000001100101                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit32(0x97132987), 31);    // 10010111000100110010100110000111                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit32(0xDADDDAAA), 31);    // 11011010110111011101101010101010                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit32(0x321897AD), 29);    // 00110010000110001001011110101101                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit32(0x00981398), 23);    // 00000000100110000001001110011000                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit32(0x00000046), 6);     // 00000000000000000000000001000110                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit32(0x00000000), -1);    // 00000000000000000000000000000000                                                                                              // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("findLastBit64()");                                                                                                                                                                        // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit64(0x134AD0654091AB11), 60);    // 0001001101001010110100000110010101000000100100011010101100010001                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit64(0x9713298713971300), 63);    // 1001011100010011001010011000011100010011100101110001001100000000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit64(0xDADDDAAADDADDDAC), 63);    // 1101101011011101110110101010101011011101101011011101110110101100                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit64(0x321897ADBCDEDDA0), 61);    // 0011001000011000100101111010110110111100110111101101110110100000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit64(0x009813981ABBB800), 55);    // 0000000010011000000100111001100000011010101110111011100000000000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit64(0x0000000046AABBCC), 30);    // 0000000000000000000000000000000001000110101010101011101111001100                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit64(0x0000000000000046), 6);     // 0000000000000000000000000000000000000000000000000000000001000110                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastBit64(0x0000000000000000), -1);    // 0000000000000000000000000000000000000000000000000000000000000000                                                      // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("findLastZero16()");                                                                                                                                                                       // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero16(0xFD4A), 9);    // 1111110101001010                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero16(0xFFFE), 0);    // 1111111111111110                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero16(0xFADD), 10);   // 1111101011011101                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero16(0xF218), 11);   // 1111001000011000                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero16(0xFF98), 6);    // 1111111110011000                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero16(0xFFFF), -1);   // 1111111111111111                                                                                                                  // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("findLastZero32()");                                                                                                                                                                       // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero32(0xFD4AD065), 25);   // 11111101010010101101000001100101                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero32(0xFFFE2987), 16);   // 11111111111111100010100110000111                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero32(0xFADDDAAA), 26);   // 11111010110111011101101010101010                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero32(0xF21897AD), 27);   // 11110010000110001001011110101101                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero32(0xFF981398), 22);   // 11111111100110000001001110011000                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero32(0xFFFFF934), 10);   // 11111111111111111111100100110100                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero32(0xFFFFFFFF), -1);   // 11111111111111111111111111111111                                                                                              // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("findLastZero64()");                                                                                                                                                                       // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero64(0xFD4AD0654091AB11), 57);   // 1111110101001010110100000110010101000000100100011010101100010001                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero64(0xFFFE298713971300), 48);   // 1111111111111110001010011000011100010011100101110001001100000000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero64(0xFADDDAAADDADDDAC), 58);   // 1111101011011101110110101010101011011101101011011101110110101100                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero64(0xF21897ADBCDEDDA0), 59);   // 1111001000011000100101111010110110111100110111101101110110100000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero64(0xFF9813981ABBB800), 54);   // 1111111110011000000100111001100000011010101110111011100000000000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero64(0xFFFFF934FFFFFFFF), 42);   // 1111111111111111111110010011010011111111111111111111111111111111                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero64(0xFFFFFFFFFFF179FF), 19);   // 1111111111111111111111111111111111111111111100010111100111111111                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::findLastZero64(0xFFFFFFFFFFFFFFFF), -1);   // 1111111111111111111111111111111111111111111111111111111111111111                                                      // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("getCountOrder16()");                                                                                                                                                                      // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder16(0x8000), 15);  // 1000000000000000                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder16(0x8100), 16);  // 1000000100000000                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder16(0x0010), 4);   // 0000000000010000                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder16(0x0011), 5);   // 0000000000010001                                                                                                                  // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder16(0x0000), -1);  // 0000000000000000                                                                                                                  // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("getCountOrder32()");                                                                                                                                                                      // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder32(0x80000000), 31);  // 10000000000000000000000000000000                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder32(0x81000000), 32);  // 10000001000000000000000000000000                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder32(0x00100000), 20);  // 00000000000100000000000000000000                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder32(0x00110000), 21);  // 00000000000100010000000000000000                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder32(0x00000010), 4);   // 00000000000000000000000000010000                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder32(0x00000011), 5);   // 00000000000000000000000000010001                                                                                              // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder32(0x00000000), -1);  // 00000000000000000000000000000000                                                                                              // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
    TEST_CASE("getCountOrder64()");                                                                                                                                                                      // Colorize: green
    {                                                                                                                                                                                                    // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder64(0x8000000000000000), 63);  // 1000000000000000000000000000000000000000000000000000000000000000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder64(0x8100000000000000), 64);  // 1000000100000000000000000000000000000000000000000000000000000000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder64(0x0000001000000000), 36);  // 0000000000000000000000000001000000000000000000000000000000000000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder64(0x0000001100000000), 37);  // 0000000000000000000000000001000100000000000000000000000000000000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder64(0x0000000000000010), 4);   // 0000000000000000000000000000000000000000000000000000000000010000                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder64(0x0000000000000011), 5);   // 0000000000000000000000000000000000000000000000000000000000010001                                                      // Colorize: green
        TEST_ASSERT_EQUALS(BitUtils::getCountOrder64(0x0000000000000000), -1);  // 0000000000000000000000000000000000000000000000000000000000000000                                                      // Colorize: green
    }                                                                                                                                                                                                    // Colorize: green
    TEST_CASE_END();                                                                                                                                                                                     // Colorize: green
}                                                                                                                                                                                                        // Colorize: green
TEST_CASES_END();                                                                                                                                                                                        // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
#endif                                                                                                                                                                                                   // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
                                                                                                                                                                                                         // Colorize: green
#endif // COM_NGOS_SHARED_UEFIBASE_SECTIONS_SECTION0_COM_NGOS_SHARED_COMMON_BITS_BITUTILS_H                                                                                                              // Colorize: green
