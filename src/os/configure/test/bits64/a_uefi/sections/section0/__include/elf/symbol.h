#ifndef CONFIGURE_TEST_BITS64_A_UEFI_SECTIONS_SECTION0___INCLUDE_ELF_SYMBOL_H
#define CONFIGURE_TEST_BITS64_A_UEFI_SECTIONS_SECTION0___INCLUDE_ELF_SYMBOL_H



#include <buildconfig.h>
#include <elf/symbol.h>

#include "test/bits64/a_uefi/testengine.h"



#if NGOS_BUILD_TEST_MODE == OPTION_YES



TEST_CASES(section0, __include_elf_symbol);
{
    TEST_CASE("ELF_SYMBOL_BIND()");
    {
        TEST_ASSERT_EQUALS(ELF_SYMBOL_BIND(7),   0);
        TEST_ASSERT_EQUALS(ELF_SYMBOL_BIND(63),  3);
        TEST_ASSERT_EQUALS(ELF_SYMBOL_BIND(137), 8);
    }
    TEST_CASE_END();



    TEST_CASE("ELF_SYMBOL_TYPE()");
    {
        TEST_ASSERT_EQUALS(ELF_SYMBOL_TYPE(7),   7);
        TEST_ASSERT_EQUALS(ELF_SYMBOL_TYPE(63),  15);
        TEST_ASSERT_EQUALS(ELF_SYMBOL_TYPE(137), 9);
    }
    TEST_CASE_END();



    TEST_CASE("ELF_SYMBOL_INFO()");
    {
        TEST_ASSERT_EQUALS(ELF_SYMBOL_INFO(3,  1),  49);
        TEST_ASSERT_EQUALS(ELF_SYMBOL_INFO(7,  9),  121);
        TEST_ASSERT_EQUALS(ELF_SYMBOL_INFO(15, 15), 255);
    }
    TEST_CASE_END();



    TEST_CASE("ELF_SYMBOL_VISIBILITY()");
    {
        TEST_ASSERT_EQUALS(ELF_SYMBOL_VISIBILITY(7), 3);
        TEST_ASSERT_EQUALS(ELF_SYMBOL_VISIBILITY(8), 0);
        TEST_ASSERT_EQUALS(ELF_SYMBOL_VISIBILITY(9), 1);
    }
    TEST_CASE_END();
}
TEST_CASES_END();



#endif



#endif // CONFIGURE_TEST_BITS64_A_UEFI_SECTIONS_SECTION0___INCLUDE_ELF_SYMBOL_H
